{"version":3,"sources":["components/Menubar.jsx","redux/actions.js","components/index.jsx","containers/Home.jsx","containers/Packages.jsx","routes.jsx","redux/reducers/index.js","redux/reducers/name.js","middleware.js","sagas/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["Menubar","_useState","useState","_useState2","Object","slicedToArray","isOpen","toggleState","react_default","a","createElement","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","exact","CHANGE_NAME","GET_NAME_ASYNC","changeName","createAction","getNameAsync","InnerContainer","styled_base_browser_esm","Container","target","name","styles","connect","state","dispatch","bindActionCreators","props","setName","submitForm","event","preventDefault","components","fluid","Row","Col","xs","md","lg","Card","CardHeader","web","items","from","position","paddingLeft","opacity","enter","leave","style","CardBody","Form","onSubmit","InputGroup","Input","placeholder","value","onChange","InputGroupAddon","addonType","Button","packagesPreInstalled","react","react-router","redux","redux-saga","redux-actions","immutable","axios","reactstrap","emotion","react-spring","react-loadable","lodash","redux-devtools","Packages","ListGroup","element","ListGroupItem","keys","map","text","React","cloneElement","href","key","uniqueId","Routes","HashRouter","components_Menubar","Switch","Route","path","component","Home","reducers","handleAction","action","payload","sagaMiddleware","createSagaMiddleware","middleware","watchGetNameAsync","rootSaga","apiCall","get","then","response","data","catch","err","regenerator_default","wrap","_context","prev","next","call","sent","put","type","stop","_marked","this","_context2","takeEvery","_marked2","_context3","all","_marked3","createStore","combineReducers","objectSpread","form","formReducer","composeWithDevTools","applyMiddleware","apply","toConsumableArray","run","App","es","store","routes","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6870d78f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Navbar,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse\n} from \"reactstrap\";\nimport { NavLink as Link } from \"react-router-dom\";\n\nconst Menubar = () => {\n  const [isOpen, toggleState] = useState(false);\n\n  const toggle = () => {\n    toggleState(!isOpen);\n  };\n\n  return (\n    <Navbar color=\"dark\" dark expand=\"md\">\n      <NavbarBrand tag={Link} to=\"/\">\n        React Redux Boilerplate\n      </NavbarBrand>\n      <NavbarToggler onClick={toggle} />\n      <Collapse isOpen={isOpen} navbar>\n        <Nav className=\"ml-auto\" navbar>\n          <NavItem>\n            <NavLink tag={Link} exact to=\"/\">\n              Home\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink tag={Link} exact to=\"/packages\">\n              Packages\n            </NavLink>\n          </NavItem>\n        </Nav>\n      </Collapse>\n    </Navbar>\n  );\n};\n\nexport default Menubar;\n","import { createAction } from \"redux-actions\";\n\nexport const CHANGE_NAME = \"CHANGE_NAME\";\n\nexport const GET_NAME_ASYNC = \"GET_NAME_ASYNC\";\n\nexport const changeName = createAction(CHANGE_NAME);\n\nexport const getNameAsync = createAction(GET_NAME_ASYNC);\n","import { Container } from \"reactstrap\";\nimport styled from \"@emotion/styled/macro\";\n\nconst InnerContainer = styled(Container)`\n  height: calc(100% - 56px);\n`;\n\nexport default InnerContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {\n  Row,\n  Button,\n  Input,\n  Card,\n  CardBody,\n  Col,\n  CardHeader,\n  InputGroup,\n  InputGroupAddon,\n  Form\n} from \"reactstrap\";\nimport { Transition } from \"react-spring\";\n\nimport { changeName, getNameAsync } from \"../redux/actions\";\nimport InnerContainer from \"../components\";\n\nconst Home = props => {\n  const [name, setName] = useState(\"\");\n\n  const submitForm = event => {\n    event.preventDefault();\n    props.changeName(name);\n  };\n\n  return (\n    <InnerContainer fluid>\n      <Row className=\"justify-content-center align-items-center h-100\">\n        <Col xs=\"6\" md=\"4\" lg=\"3\">\n          <Card>\n            <CardHeader>\n              <h2>\n                {\"Welcome \"}\n                <Transition\n                  items={props.name}\n                  from={{\n                    position: \"absolute\",\n                    paddingLeft: \"0.5rem\",\n                    opacity: 0\n                  }}\n                  enter={{ opacity: 1 }}\n                  leave={{ opacity: 0 }}\n                >\n                  {name => props => <span style={props}>{name}</span>}\n                </Transition>\n              </h2>\n            </CardHeader>\n            <CardBody>\n              <Form onSubmit={submitForm}>\n                <InputGroup>\n                  <Input\n                    placeholder=\"Your name\"\n                    value={name}\n                    onChange={event => {\n                      setName(event.target.value);\n                    }}\n                  />\n                  <InputGroupAddon addonType=\"append\">\n                    <Button color=\"success\" onClick={submitForm}>\n                      Update name!\n                    </Button>\n                  </InputGroupAddon>\n                </InputGroup>\n              </Form>\n              <br />\n              <Button\n                color=\"primary\"\n                onClick={event => {\n                  event.preventDefault();\n                  props.getNameAsync();\n                }}\n              >\n                Random name!\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </InnerContainer>\n  );\n};\n\nHome.propTypes = {\n  name: PropTypes.string.isRequired,\n  changeName: PropTypes.func.isRequired,\n  getNameAsync: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    name: state.name.name\n  };\n};\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changeName,\n      getNameAsync\n    },\n    dispatch\n  );\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React from \"react\";\nimport { Row, Col, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { uniqueId } from \"lodash\";\nimport InnerContainer from \"../components\";\n\nconst packagesPreInstalled = {\n  react: \"https://reactjs.org/\",\n  \"react-router\": \"https://github.com/ReactTraining/react-router\",\n  redux: \"https://redux.js.org/\",\n  \"redux-saga\": \"https://redux-saga.js.org/\",\n  \"redux-actions\": \"https://redux-actions.js.org/\",\n  immutable: \"https://facebook.github.io/immutable-js/\",\n  axios: \"https://github.com/axios/axios\",\n  reactstrap: \"https://reactstrap.github.io/\",\n  emotion: \"https://emotion.sh/\",\n  \"react-spring\": \"http://react-spring.surge.sh/\",\n  \"react-loadable\": \"https://github.com/jamiebuilds/react-loadable\",\n  lodash: \"https://lodash.com/\",\n  \"redux-devtools\": \"https://github.com/zalmoxisus/redux-devtools-extension\"\n};\n\nconst generate = element =>\n  Object.keys(packagesPreInstalled).map(text =>\n    React.cloneElement(\n      element,\n      {\n        href: packagesPreInstalled[text],\n        key: uniqueId()\n      },\n      [text]\n    )\n  );\n\nconst Packages = () => (\n  <InnerContainer fluid>\n    <Row className=\"justify-content-center align-items-center h-100\">\n      <Col xs=\"6\">\n        <ListGroup>{generate(<ListGroupItem tag=\"a\" />)}</ListGroup>\n      </Col>\n    </Row>\n  </InnerContainer>\n);\n\nexport default Packages;\n","import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// For GitHub\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Menubar from \"./components/Menubar\";\nimport Home from \"./containers/Home\";\nimport Packages from \"./containers/Packages\";\nimport { Container } from \"reactstrap\";\n\nconst Routes = () => (\n  <Router>\n    <Container fluid className=\"p-0 h-100\">\n      <Menubar />\n      <Switch>\n        <Route path=\"/packages\" exact component={Packages} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </Container>\n  </Router>\n);\n\nexport default Routes;\n","import name from \"./name\";\n\nexport default {\n  name\n};\n","import { handleAction } from \"redux-actions\";\nimport { CHANGE_NAME } from \"../actions\";\n\nconst defaultState = {\n  name: \"you\"\n};\n\nexport default handleAction(\n  CHANGE_NAME,\n  (state, action) => ({\n    name: action.payload\n  }),\n  defaultState\n);\n","import createSagaMiddleware from \"redux-saga\";\n\nexport const sagaMiddleware = createSagaMiddleware();\n\nexport default [sagaMiddleware];\n","import { put, takeEvery, call, all } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { CHANGE_NAME, GET_NAME_ASYNC } from \"../redux/actions\";\n\nconst apiCall = () =>\n  axios\n    .get(\"https://uinames.com/api/?amount=1\")\n    .then(response => response.data.name)\n    .catch(err => {\n      throw err;\n    });\n\nfunction* getNameAsync() {\n  const response = yield call(apiCall);\n  yield put({ type: CHANGE_NAME, payload: response });\n}\n\nfunction* watchGetNameAsync() {\n  yield takeEvery(GET_NAME_ASYNC, getNameAsync);\n}\n\nexport default function* rootSaga() {\n  yield all([watchGetNameAsync()]);\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport reducers from \"./redux/reducers\";\nimport middleware, { sagaMiddleware } from \"./middleware\";\nimport rootSaga from \"./sagas\";\n\nexport default createStore(\n  combineReducers({\n    ...reducers,\n    form: formReducer\n  }),\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nsagaMiddleware.run(rootSaga);\n","import React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport Routes from \"./routes\";\nimport store from \"./store\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}